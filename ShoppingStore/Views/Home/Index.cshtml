@using ShoppingStore.Models.Dtos
@using ShoppingStore.Repository.Interfaces

@model PagedResultDto<ShoppingStore.Models.Items>
@{
    ViewData["Title"] = "Home Page";
  
}

@if (ViewBag.Alert != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @ViewBag.Alert
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (ViewBag.AlertError != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @ViewBag.AlertError
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<div class="d-flex justify-content-between">
    <div>
        <h1>List of Items</h1>
    </div>
    @if (@ViewBag.counter != 0)
    {
        <div>
            <a asp-action="ItemDetails">
                <i class="bi bi-cart-fill text-dark fs-2 position-relative">
                    <div>
                        <span class="position-absolute top-0 start-100 translate-top badge rounded-pill bg-danger fs-6">
                            @ViewBag.counter
                            <span class="visually-hidden">unread messages</span>
                        </span>
                    </div>
                </i>
            </a>
        </div>
    }
    else
    {
        <div>
            <i class="bi bi-cart-fill text-dark fs-2 position-relative"></i>
        </div>
    }
</div>
<hr />

<!-- Filter and Page Size Inputs -->
<div class="row mt-3 mb-4">
    <div class="col-md-6">
        <form method="get" asp-action="Index" class="form-inline">
            <div class="row g-2">
                <div class="col-md-4">
                    <input type="text" class="form-control" name="filter" placeholder="Search...">
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary">Filter</button>
                </div>
               
               
            </div>
             
        </form>
    </div>
    <div class="col-md-6 filterpages">
        <form method="get" asp-action="Index" class="form-inline ">
        
            <div class="row">
                <div class="col-md-4">
                 
                    @if(Model.PageSize == 5)
                    {
                        <select class="form-select" name="pageSize" onchange="this.form.submit()">
                            <option selected>Select Page Size</option>

                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="20">20</option>
                    </select>
                    }
                    @if (Model.PageSize == 10)
                    {
                        <select class="form-select" name="pageSize" onchange="this.form.submit()">
                            <option value="5" >5</option>
                            <option value="10" selected>10</option>
                            <option value="20">20</option>
                        </select>
                    }
                    @if (Model.PageSize == 20)
                    {
                        <select class="form-select" name="pageSize" onchange="this.form.submit()">
                            <option value="5" >5</option>
                            <option value="10">10</option>
                            <option value="20" selected>20</option>
                        </select>
                    }
                </div>
                
            </div>
        </form>
    </div>
</div>

<div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4 justify-content-evenly">
    @foreach (var item in Model.Items)
    {
        <div class="col" id="@Html.DisplayFor(modelItem => item.Id).ToString()">
            <div class="card h-100">
                
                @if (string.IsNullOrEmpty(item.ImageURL))
                {
                    <img class="card-img-top image-size" src="~/Content/images/placeholder-image.png" />
                }
                else
                {
                    <img class="card-img-top image-size" src="@item.ImageURL" />
                }
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                    <hr />
                    <p>@Html.DisplayFor(modelItem => item.Description)</p>
                </div>
                <div class="card-footer">
                    <div class="d-flex justify-content-between">
                        <span class="text-body-secondary py-2">$@Html.DisplayFor(modelItem => item.Price)</span>
                        @* @* @{
                            var x = ViewBag.Basket?.Items;
                            var basket =((Orders)ViewBag.Basket)?.Items?.FirstOrDefault(obj => obj.Id == item.Id);
                        }
                        @if (basket?.Id == item.Id)
                        {
                            <span class="text-success p-2"><i class="bi bi-check-circle"></i> Added to Cart</span>
                        }
                        else
                        { *@ 
                            <a asp-action="AddItem" asp-route-id="@item.Id" type="button" class="btn btn-outline-primary"><i class="bi bi-plus-circle"></i> Add to Cart</a>
                        @* } *@
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Pagination -->
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center mt-4">
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" href="?page=@i">@i</a>
            </li>
        }
    </ul>
</nav>

<div class="row mt-3">
    <div class="col">
        <label>@Model.PageSize of Total Items: @Model.TotalCount</label>
    </div>
</div>