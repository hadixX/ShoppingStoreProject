@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
   
        <li class="nav-item">
            <div class="dropdown">

                <i class="bi bi-person-fill dropdown-toggle text-light fs-2"
                type="button" data-bs-toggle="dropdown" data-bs-display="static"
                aria-expanded="false"></i>
                <ul class="dropdown-menu dropdown-menu-lg-end " style="max-width:200px;">
                    <li> <a id="manage" class="nav-link text-dark fs-6" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li>
                        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                            <button id="logout" type="submit" class="nav-link btn fs-6 btn-link text-dark">Logout</button>
                        </form>
                    </li>
                </ul>
            </div>
        </li>
}
else
{
   
        
    <li class="nav-item">
            <a class="nav-link text-light" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
            <a class="nav-link text-light" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
